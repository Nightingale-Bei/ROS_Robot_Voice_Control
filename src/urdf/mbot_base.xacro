<?xml version="1.0"?>
<robot name="mbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:property name="M_PI" value="3.1415926" />

  <xacro:property name="wheel_joint_x" value="0" />
  <xacro:property name="wheel_joint_y" value="0.19" />
  <xacro:property name="wheel_joint_z" value="0.05" />

  <xacro:property name="wheel_mass" value="0.3" />
  <xacro:property name="wheel_length" value="0.06" />
  <xacro:property name="wheel_radius" value="0.06" />

  <xacro:property name="caster_joint_x" value="0.18" />
  <xacro:property name="caster_joint_y" value="0" />
  <xacro:property name="caster_joint_z" value="0.095" />

  <xacro:property name="caster_mass" value="0.1" />
  <xacro:property name="caster_radius" value="0.015" />

  <xacro:property name="base_mass" value="1" />
  <xacro:property name="base_length" value="0.16" />
  <xacro:property name="base_radius" value="0.2" />

  <xacro:property name="stage_mass" value="0.5" />
  <xacro:property name="stage_length" value="0.1" />
  <xacro:property name="stage_radius" value="0.1" />

  <xacro:property name="stage2_mass" value="0.1" />
  <xacro:property name="stage2_length" value="0.04" />
  <xacro:property name="stage2_radius" value="0.05" />

  <xacro:property name="z_rotator_mass" value="0.1" />
  <xacro:property name="z_rotator_length" value="0.06" />
  <xacro:property name="z_rotator_width" value="0.06" />
  <xacro:property name="z_rotator_height" value="0.2" />

  <xacro:property name="y_rotator_mass" value="0.1" />
  <xacro:property name="y_rotator_length" value="0.065" />
  <xacro:property name="y_rotator_radius" value="0.03" />

  <xacro:property name="camera_shell_mass" value="0.05" />
  <xacro:property name="camera_shell_length" value="0.18" />
  <xacro:property name="camera_shell_width" value="0.07" />
  <xacro:property name="camera_shell_height" value="0.07" />

  <xacro:property name="camera_joint_x" value="0.17" />
  <xacro:property name="camera_joint_y" value="0" />
  <xacro:property name="camera_joint_z" value="0.1" />

  <xacro:property name="camera_mass" value="0.005" />
  <xacro:property name="camera_length" value="0.01" />
  <xacro:property name="camera_radius" value="0.025" />

  <xacro:property name="kinect_joint_x" value="0.15" />
  <xacro:property name="kinect_joint_y" value="0" />
  <xacro:property name="kinect_joint_z" value="0.11" />


  <material name="white">
    <color rgba="1 1 1 1" />
  </material>
  <material name="red">
    <color rgba="1 0 0 0.8" />
  </material>

  <material name="grey">
    <color rgba="0.5 0.5 0.5 1" />
  </material>

  <material name="black">
    <color rgba="0 0 0 1" />
  </material>

  <!-- Macro for inertia matrix -->
  <xacro:macro name="cylinder_inertial_matrix" params="m r h">
    <inertial>
      <mass value="${m}" />
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy="0" ixz="0"
        iyy="${m*(3*r*r+h*h)/12}" iyz="0"
        izz="${m*r*r/2}" />
    </inertial>
  </xacro:macro>
  <xacro:macro name="sphere_inertial_matrix" params="m r">
    <inertial>
      <mass value="${m}" />
      <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
        iyy="${2*m*r*r/5}" iyz="0"
        izz="${2*m*r*r/5}" />
    </inertial>
  </xacro:macro>
  <xacro:macro name="box_inertial_matrix" params="m l w h">
    <inertial>
      <mass value="${m}" />
      <inertia ixx="${m*(l*l+h*h)/12}" ixy="0" ixz="0"
        iyy="${m*(w*w+h*h)/12}" iyz="0"
        izz="${m*(w*w+l*l)/12}" />
    </inertial>
  </xacro:macro>


  <xacro:macro name="base_stage">
    <!-- link base_footprint -->
    <link name="base_footprint">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="0.001 0.001 0.001" />
        </geometry>
      </visual>
    </link>
    <gazebo reference="base_footprint">
      <turnGravityOff>false</turnGravityOff>
    </gazebo>

    <joint name="base_link_joint" type="fixed">
      <origin xyz="0 0 ${base_length/2 + caster_radius*2}" rpy="0 0 0" />
      <parent link="base_footprint" />
      <child link="base_link" />
    </joint>

    <link name="base_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${base_length}" radius="${base_radius}" />
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz=" 0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${base_length}" radius="${base_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${base_mass}" r="${base_radius}" h="${base_length}" />
    </link>

    <gazebo reference="base_link">
      <material>Gazebo/Red</material>
    </gazebo>

    <joint name="stage_joint" type="fixed">
      <origin xyz="0 0 ${(base_length + stage_length)/2}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="stage_link" />
    </joint>

    <link name="stage_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${stage_length}" radius="${stage_radius}" />
        </geometry>
        <material name="red" />
      </visual>
      <collision>
        <origin xyz=" 0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${stage_length}" radius="${stage_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${stage_mass}" r="${stage_radius}" h="${stage_length}" />
    </link>

    <gazebo reference="stage_link">
      <material>Gazebo/Red</material>
    </gazebo>

    <joint name="stage2_joint" type="fixed">
      <origin xyz="0 0 ${(stage_length + stage2_length)/2}" rpy="0 0 0" />
      <parent link="stage_link" />
      <child link="stage2_link" />
    </joint>

    <link name="stage2_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${stage2_length}" radius="${stage2_radius}" />
        </geometry>
        <material name="grey" />
      </visual>
      <collision>
        <origin xyz=" 0 0 0" rpy="0 0 0" />
        <geometry>
          <cylinder length="${stage2_length}" radius="${stage2_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${stage2_mass}" r="${stage2_radius}" h="${stage2_length}" />
    </link>

    <gazebo reference="stage2_link">
      <material>Gazebo/Grey</material>
    </gazebo>


    <joint name="z_rotator_joint" type="continuous">
      <origin xyz="0 0 ${(z_rotator_height + stage2_length)/2}" rpy="0 0 0" />
      <parent link="stage2_link" />
      <child link="z_rotator_link" />
      <axis xyz="0 0 1" />
      <limit lower="-2.094" upper="2.670" effort="1" velocity="1.0" />
      <dynamics damping="0.3" />
    </joint>

    <link name="z_rotator_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${z_rotator_length} ${z_rotator_width} ${z_rotator_height}" />
        </geometry>
        <material name="grey" />
      </visual>
      <collision>
        <origin xyz=" 0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${z_rotator_length} ${z_rotator_width} ${z_rotator_height}" />
        </geometry>
      </collision>

      <xacro:box_inertial_matrix m="${z_rotator_mass}" l="${z_rotator_length}"
        w="${z_rotator_width}" h="${z_rotator_height}" />

    </link>

    <gazebo reference="z_rotator_link">
      <material>Gazebo/Grey</material>
    </gazebo>

    <joint name="y_rotator_joint" type="revolute">
      <origin xyz="0 0 ${(z_rotator_height + y_rotator_radius*2)/2}"
        rpy="0 0 0" />
      <parent link="z_rotator_link" />
      <child link="y_rotator_link" />
      <limit lower="-1.047" upper="1.047" effort="3.3" velocity="1.0" />
      <axis xyz="0 1 0" />
    </joint>

    <link name="y_rotator_link">
      <visual>
        <origin xyz="0 0 0" rpy=" 1.571 0 0" />
        <geometry>
          <cylinder length="${y_rotator_length}" radius="${y_rotator_radius}" />
        </geometry>
        <material name="grey" />
      </visual>
      <collision>
        <origin xyz=" 0 0 0" rpy="1.571 0 0" />
        <geometry>
          <cylinder length="${y_rotator_length}" radius="${y_rotator_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${y_rotator_mass}" r="${y_rotator_radius}"
        h="${y_rotator_length}" />
    </link>

    <gazebo reference="y_rotator_link">
      <material>Gazebo/Grey</material>
    </gazebo>


    <joint name="camera_shell_joint" type="fixed">
      <origin
        xyz="0  ${(camera_shell_height + y_rotator_length)/2 } 0 "
        rpy="0 0 0" />
      <parent link="y_rotator_link" />
      <child link="camera_shell_link" />
    </joint>

    <link name="camera_shell_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${camera_shell_length} ${camera_shell_width} ${camera_shell_height}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
        <origin xyz=" 0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${camera_shell_length} ${camera_shell_width} ${camera_shell_height}" />
        </geometry>
      </collision>
      <xacro:box_inertial_matrix m="${camera_shell_mass}" l="${camera_shell_length}"
        w="${camera_shell_width}" h="${camera_shell_height}" />
    </link>

    <gazebo reference="camera_shell_link">
      <material>Gazebo/White</material>
    </gazebo>

    <joint name="camera_shell2_joint" type="fixed">
      <origin
        xyz="0  ${-(camera_shell_height + y_rotator_length)/2 } 0 "
        rpy="0 0 0" />
      <parent link="y_rotator_link" />
      <child link="camera_shell2_link" />
    </joint>

    <link name="camera_shell2_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${camera_shell_length} ${camera_shell_width} ${camera_shell_height}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
        <origin xyz=" 0 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${camera_shell_length} ${camera_shell_width} ${camera_shell_height}" />
        </geometry>
      </collision>
      <xacro:box_inertial_matrix m="${camera_shell_mass}" l="${camera_shell_length}"
        w="${camera_shell_width}" h="${camera_shell_height}" />
    </link>

    <gazebo reference="camera_shell2_link">
      <material>Gazebo/White</material>
    </gazebo>

    <joint name="camera_counterw_joint" type="fixed">
      <origin xyz="${-camera_shell_length/2} 0 0 " rpy="0 0 0" />
      <parent link="camera_shell_link" />
      <child link="camera_counterw_link" />
    </joint>

    <link name="camera_counterw_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 ${M_PI/2} 0" />
        <geometry>
          <cylinder length="${camera_length}" radius="${camera_radius}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 ${M_PI/2}  0" />
        <geometry>
          <cylinder length="${camera_length}" radius="${camera_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${camera_mass*1.02}" r="${camera_radius}"
        h="${camera_length}" />
    </link>

    <gazebo reference="camera_counterw_link">
      <material>Gazebo/White</material>
    </gazebo>

    <joint name="camera_counterw2_joint" type="fixed">
      <origin xyz="${-camera_shell_length/2} 0 0 " rpy="0 0 0" />
      <parent link="camera_shell2_link" />
      <child link="camera_counterw2_link" />
    </joint>

    <link name="camera_counterw2_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 ${M_PI/2} 0" />
        <geometry>
          <cylinder length="${camera_length}" radius="${camera_radius}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 ${M_PI/2}  0" />
        <geometry>
          <cylinder length="${camera_length}" radius="${camera_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${camera_mass*1.02}" r="${camera_radius}"
        h="${camera_length}" />
    </link>

    <gazebo reference="camera_counterw2_link">
      <material>Gazebo/White</material>
    </gazebo>

    <joint name="light_joint" type="fixed">
      <origin xyz="${camera_shell_length/2} 0 0 " rpy="0 0 0" />
      <parent link="camera_shell2_link" />
      <child link="light_link" />
    </joint>

    <link name="light_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 ${M_PI/2} 0" />
        <geometry>
          <cylinder length="${camera_length}" radius="${camera_radius}" />
        </geometry>
        <material name="grey" />
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 ${M_PI/2}  0" />
        <geometry>
          <cylinder length="${camera_length}" radius="${camera_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${camera_mass}" r="${camera_radius}" h="${camera_length}" />
    </link>

    <gazebo reference="light_link">
      <material>Gazebo/Grey</material>
    </gazebo>

    <joint name="left_wheel_joint" type="continuous">
      <origin xyz="${wheel_joint_x} ${wheel_joint_y} ${-wheel_joint_z}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="left_wheel_link" />
      <axis xyz="0 1 0" />
 
      
    </joint>

    <link name="left_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
    </link>

    <gazebo reference="left_wheel_link">
      <material>Gazebo/White</material>
    </gazebo>

    <joint name="right_wheel_joint" type="continuous">
      <origin xyz="${wheel_joint_x} ${-1*wheel_joint_y} ${-wheel_joint_z}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="right_wheel_link" />
      <axis xyz="0 1 0" />
     
      
    </joint>

    <link name="right_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
    </link>

    <gazebo reference="right_wheel_link">
      <material>Gazebo/White</material>
    </gazebo>


    <!-- transmission 2 rotator -->
    <transmission name="tran1">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="z_rotator_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor1">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    <transmission name="tran2">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="y_rotator_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor1">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>


    <!--transmission 2 whell -->
    <transmission name="left_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="left_wheel_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="left_wheel_joint_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
    <transmission name="right_wheel_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="right_wheel_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="right_wheel_joint_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>


  </xacro:macro>


  <xacro:macro name="caster" params="prefix reflect">
    <joint name="${prefix}_caster_joint" type="continuous">
      <origin xyz="${reflect*caster_joint_x} ${caster_joint_y} ${-caster_joint_z}" rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${prefix}_caster_link" />
      <axis xyz="1 1 1" />
    </joint>

    <link name="${prefix}_caster_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <sphere radius="${caster_radius}" />
        </geometry>
        <material name="white" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <sphere radius="${caster_radius}" />
        </geometry>
      </collision>
      <xacro:sphere_inertial_matrix m="${caster_mass}" r="${caster_radius}" />
    </link>

    <gazebo reference="${prefix}_caster_link">
      <material>Gazebo/White</material>
    </gazebo>

  </xacro:macro>

  <xacro:macro name="robot_base">

    <xacro:base_stage />

    <xacro:caster prefix="front" reflect="1" />
    <xacro:caster prefix="back" reflect="-1" />

    <!-- controllers -->
    <gazebo>
      <plugin name="controllers" filename="libgazebo_ros_control.so">
        <robotNamespace>/mbot</robotNamespace>
        <controlPeriod>0.01</controlPeriod>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
	<broadcastTF>1</broadcastTF>
	<publishOdomTF>true</publishOdomTF>
	<odometryTopic>/odom</odometryTopic>
	<odometryFrame>/odom</odometryFrame>
      </plugin>
    </gazebo>

  </xacro:macro>

  <xacro:robot_base />

  <xacro:include filename="$(find gazebo_test)/urdf/sensor/camera.xacro" />
  <xacro:usb_camera camera_mass="${camera_mass}" camera_length="${camera_length}"
    camera_radius="${camera_radius}" joint_x="${camera_shell_length/2}" joint_y="0" joint_z="0" />


  <xacro:include filename="$(find gazebo_test)/urdf/sensor/kinect.xacro" />
  <xacro:kinect joint_x="${kinect_joint_x}" joint_y="${kinect_joint_y}" joint_z="${kinect_joint_z}" />


</robot>
